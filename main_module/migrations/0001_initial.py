# Generated by Django 4.1.1 on 2023-12-24 17:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cryptocompare_id', models.CharField(max_length=255, unique=True)),
                ('cryptocompare_symbol', models.CharField(max_length=255)),
                ('cryptocompare_coinname', models.CharField(max_length=255)),
                ('cryptocompare_fullname', models.CharField(max_length=255)),
                ('coingecko_id', models.CharField(max_length=255)),
                ('coingecko_symbol', models.CharField(max_length=255)),
                ('coingecko_name', models.CharField(max_length=255)),
                ('cryptocompare_imageurl', models.CharField(max_length=255, null=True)),
                ('cryptocompare_assetlaunchdate', models.CharField(max_length=255, null=True)),
                ('cryptocompare_assetwebsiteurl', models.CharField(max_length=255, null=True)),
                ('coin_status', models.CharField(max_length=255, null=True)),
                ('codrepo_perc', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('fb_perc', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('reddit_perc', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('twitter_perc', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('imageurl', models.CharField(blank=True, max_length=512, null=True)),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('symbol', models.CharField(blank=True, max_length=128, null=True)),
                ('total_perc', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('bullish', models.BigIntegerField(blank=True, null=True)),
                ('neutral', models.BigIntegerField(blank=True, null=True)),
                ('bearish', models.BigIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TwitterData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_creation', models.BigIntegerField(default=1313643968000, null=True)),
                ('favourites', models.BigIntegerField(default=1000, null=True)),
                ('followers', models.BigIntegerField(default=844049, null=True)),
                ('following', models.BigIntegerField(default=165, null=True)),
                ('lists', models.BigIntegerField(default=6631, null=True)),
                ('points', models.BigIntegerField(default=91055, null=True)),
                ('statuses', models.BigIntegerField(default=2031, null=True)),
                ('token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='twitter_data', to='main_module.token')),
            ],
        ),
        migrations.CreateModel(
            name='TokenOHLCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=255)),
                ('currency', models.CharField(max_length=255)),
                ('open_value', models.CharField(max_length=255)),
                ('high', models.CharField(max_length=255)),
                ('low', models.CharField(max_length=255)),
                ('close_value', models.CharField(max_length=255)),
                ('volumefrom', models.CharField(max_length=255)),
                ('volumeto', models.CharField(max_length=255)),
                ('token', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_module.token')),
            ],
        ),
        migrations.CreateModel(
            name='TechIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ema10', models.FloatField(default=21419.650556424, null=True)),
                ('ema50', models.FloatField(default=23477.3946873044, null=True)),
                ('ema_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='bearish', max_length=10, null=True)),
                ('macd_line', models.FloatField(default=-301.3443464701, null=True)),
                ('macd_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='bullish', max_length=10, null=True)),
                ('macd_signal', models.FloatField(default=-864.379150169, null=True)),
                ('mfi14', models.FloatField(default=76.7455530806, null=True)),
                ('mfi14_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='bullish', max_length=10, null=True)),
                ('mom10', models.FloatField(default=1817.74, null=True)),
                ('mom10_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='bullish', max_length=10, null=True)),
                ('rsi10', models.FloatField(default=69.1125657987, null=True)),
                ('rsi10_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='neutral', max_length=10, null=True)),
                ('rsi50', models.FloatField(default=43.2777984936, null=True)),
                ('rsi50_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='neutral', max_length=10, null=True)),
                ('sma10', models.FloatField(default=20957.507, null=True)),
                ('sma50', models.FloatField(default=23114.7386, null=True)),
                ('sma_sentiment', models.CharField(choices=[('bullish', 'bullish'), ('bearish', 'bearish'), ('neutral', 'neutral')], default='bearish', max_length=10, null=True)),
                ('token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='techindicators', to='main_module.token')),
            ],
        ),
        migrations.CreateModel(
            name='RedditData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_users', models.BigIntegerField(default=11157, null=True)),
                ('comments_per_day', models.FloatField(default=3368.42, null=True)),
                ('comments_per_hour', models.FloatField(default=140.35, null=True)),
                ('community_creation', models.BigIntegerField(default=1284042626000, null=True)),
                ('points', models.BigIntegerField(default=4449500, null=True)),
                ('posts_per_day', models.FloatField(default=87.36, null=True)),
                ('posts_per_hour', models.FloatField(default=3.64, null=True)),
                ('subscribers', models.BigIntegerField(default=4409293, null=True)),
                ('token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reddit_data', to='main_module.token')),
            ],
        ),
        migrations.CreateModel(
            name='FacebookData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_closed', models.BooleanField(default=False)),
                ('likes', models.BigIntegerField(default=39654, null=True)),
                ('points', models.BigIntegerField(default=39654, null=True)),
                ('talking_about', models.BigIntegerField(default=26, null=True)),
                ('token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='facebook_data', to='main_module.token')),
            ],
        ),
        migrations.CreateModel(
            name='CodrepoData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closed_total_issues', models.BigIntegerField(default=21327, null=True)),
                ('contributors', models.BigIntegerField(default=1003, null=True)),
                ('created_at', models.BigIntegerField(default=1292771803000, null=True)),
                ('forks', models.BigIntegerField(default=29844, null=True)),
                ('last_push', models.BigIntegerField(default=1631103202000, null=True)),
                ('last_update', models.BigIntegerField(default=1631100509000, null=True)),
                ('points', models.BigIntegerField(default=128093, null=True)),
                ('stars', models.BigIntegerField(default=56870, null=True)),
                ('subscribers', models.BigIntegerField(default=3845, null=True)),
                ('token', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='codrepo_data', to='main_module.token')),
            ],
        ),
    ]
